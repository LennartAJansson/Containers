apiVersion: v1
kind: ConfigMap
metadata:
  name: workloadsapi-configmap
data:
# Put environment variables here that everyone should have
  NET__Host__Name: workloadsapi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/shared"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
#https://andrewlock.net/deploying-asp-net-core-applications-to-kubernetes-part-6-adding-health-checks-with-liveness-readiness-and-startup-probes/
#https://dzone.com/articles/health-checks-with-aspnet-core-and-kubernetes

metadata:
  name: workloadsapi
  labels:
    app: workloadsapi
spec:
  replicas: 5
  selector:
    matchLabels:
      app: workloadsapi
  template:
    metadata:
      labels:
        app: workloadsapi
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      volumes:
        - name: task-pv-storage
          persistentVolumeClaim:
            claimName: task-pv-claim
      containers:
      - name: workloadsapi
        image: registry:5000/workloadsapi:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
#        livenessProbe:
#          httpGet:
#            path: /healthy
#            port: http
#          initialDelaySeconds: 10
#          timeoutSeconds: 5
        resources:
          requests:
            memory: "32Mi"
            cpu: "16m"
          #limits:
          #  memory: "128Mi"
          #  cpu: "512m"
        volumeMounts:
          - mountPath: "/data"
            name: task-pv-storage