// <auto-generated />
using Countries.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Countries.Db.Migrations
{
    [DbContext(typeof(CountriesDbContext))]
    [Migration("20220408142212_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Countries.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IsoCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Countries.Model.PhonePrefix", b =>
                {
                    b.Property<int>("PhonePrefixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PhonePrefixId");

                    b.HasIndex("CountryId");

                    b.ToTable("PhonePrefixes");
                });

            modelBuilder.Entity("Countries.Model.PhonePrefix", b =>
                {
                    b.HasOne("Countries.Model.Country", null)
                        .WithMany("Prefixes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Countries.Model.Country", b =>
                {
                    b.Navigation("Prefixes");
                });
#pragma warning restore 612, 618
        }
    }
}
